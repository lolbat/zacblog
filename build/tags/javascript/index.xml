<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on An old coder</title>
    <link>https://lolbat.github.io/zacblog/tags/javascript/</link>
    <description>Recent content in javascript on An old coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Sep 2021 15:16:12 -0600</lastBuildDate><atom:link href="https://lolbat.github.io/zacblog/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Programmers Are Strange</title>
      <link>https://lolbat.github.io/zacblog/post/programmers-are-strange/</link>
      <pubDate>Wed, 08 Sep 2021 15:16:12 -0600</pubDate>
      
      <guid>https://lolbat.github.io/zacblog/post/programmers-are-strange/</guid>
      <description>It is sometimes odd to be a coder. Perfectly acceptable code gets changed into &amp;lsquo;leaner&amp;rsquo;, &amp;lsquo;more precise&amp;rsquo; code after hours of tweaking and reading docs.
I spent a part of the day trying to figure out the best way to streamline some code I had.
let commanderTest = true; if (item.restrictions[&amp;#34;commander&amp;#34;] ) { commanderTest = characterTypes.commander; } So the code checks to see if the item we are processing has a restriction and if the unit we are attaching the item to has that quality.</description>
    </item>
    
    <item>
      <title>Javascript OOP Is Odd</title>
      <link>https://lolbat.github.io/zacblog/post/javascript-oop-is-odd/</link>
      <pubDate>Thu, 02 Sep 2021 09:24:11 -0600</pubDate>
      
      <guid>https://lolbat.github.io/zacblog/post/javascript-oop-is-odd/</guid>
      <description>I am by no means an expert in OOP. I know how to use it and I know some of the concepts but I couldn&amp;rsquo;t tell you anything about polymorphism or abstraction but I know that I use them. Way back in the olden days when I was writing Director code in Lingo I wrote my projects almost exclusively using objects. In fact I doubt that I could have written a project without using objects of some type since it became a fundamental of my coding style and my workflow.</description>
    </item>
    
    <item>
      <title>Using Node to build CLI tools</title>
      <link>https://lolbat.github.io/zacblog/post/usingnode/</link>
      <pubDate>Wed, 25 Aug 2021 15:46:55 -0600</pubDate>
      
      <guid>https://lolbat.github.io/zacblog/post/usingnode/</guid>
      <description>So I have been working with various command line tools and apps to try to build a workflow to let me take csv data that I export from a spreadsheet and turn it into JSON. This actually isn&amp;rsquo;t too difficult and there are a lot of tools, like Miller, that will let you take csv and monkey with it. It has a lot of options but many of them seem to be tools to work with CSV, or similar, data and not a lot of them seem to be options for JSON.</description>
    </item>
    
    <item>
      <title>Building a Page</title>
      <link>https://lolbat.github.io/zacblog/post/building-a-page/</link>
      <pubDate>Fri, 20 Aug 2021 10:59:46 -0600</pubDate>
      
      <guid>https://lolbat.github.io/zacblog/post/building-a-page/</guid>
      <description>I don&amp;rsquo;t know about how it works now but when ColdFusion was stilled owned by Allaire I really enjoyed using the language and the coding tools. Macromedia purchased Allaire in 2001 and it was all downhill for the language at that point. I was sadly done using CFML before Adobe came into the picture but I can&amp;rsquo;t imagine that they made anything better.
There were any number of things that I liked about working in ColdFusion but the one thing that really made an impact was your ability to compartmentalise code into external files and either include them directly or make calls to them.</description>
    </item>
    
  </channel>
</rss>
